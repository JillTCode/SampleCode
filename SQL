/*The purpose of this stored procedure is to find the first root orders of all the customers that currently belong to a specific sales person.

  The challenge is an order number could be reused every 6 months, there is no unique identifier for an order,
  and the order information in the database are at split orders level.

  The solution is to create an uniuqe key for an order by combining order number and order date, 
  and use recursive CTE to identify orders' parent/child relationship and combine split orders into presplit order. */


USE SampleCode;
DROP PROC IF EXISTS spFirstRootOrder;
GO

CREATE PROC spFirstRootOrder
  @SalesPerson AS VARCHAR(5)
AS


/*1.Find orders of customers who currently belong the sales perosn*/
IF OBJECT_ID ('tempdb..#Temp1_OrdersOfSalesPerson') IS NOT NULL
DROP TABLE #Temp1_OrdersOfSalesPerson

SELECT * 
INTO #Temp1_OrdersOfSalesPerson
FROM dbo.Orders
WHERE Orders.CustomerID IN 
	(SELECT A1.CustomerID
	 FROM dbo.AccountOwner AS A1
	  INNER JOIN (SELECT A2.CustomerID,
	                     MAX(A2.AccountOwnerEffectiveDate) AS RecentEffectiveDate
				  FROM dbo.AccountOwner AS A2
				  GROUP BY A2.CustomerID) AS A3
	    ON A1.CustomerID = A3.CustomerID
	      AND A1.AccountOwnerEffectiveDate = A3.RecentEffectiveDate
	 WHERE A1.SalesPerson = @SalesPerson)


/*2. Create an unique key for orders*/
IF OBJECT_ID ('tempdb..#Temp2_SplitOrderWithKey') IS NOT NULL
DROP TABLE #Temp2_SplitOrderWithKey

SELECT *, 
       SplitOrder + CAST(CAST(OrderDate AS INT)AS VARCHAR) AS Key_SplitOrder
INTO #Temp2_SplitOrderWithKey
FROM #Temp1_OrdersOfSalesPerson

IF OBJECT_ID ('tempdb..#Temp3_RefOrderWithKey') IS NOT NULL
DROP TABLE #Temp3_RefOrderWithKey

SELECT *,
       (RIGHT(REPLICATE('0',6)+CAST(SplitOrder AS VARCHAR(6)),6) + CAST(CAST(SplitDate AS INT) AS VARCHAR) )AS Key_ChildOrder,
       (RIGHT(REPLICATE('0',6)+CAST(OriginalOrder AS VARCHAR(6)),6) + CAST(CAST(SplitDate AS INT) AS VARCHAR) )AS Key_ParentOrder
INTO #Temp3_RefOrderWithKey
FROM dbo.OrderReference


/*3. Identify root order numbers*/
IF OBJECT_ID ('tempdb..#Temp4_OrderWithRootIndicator') IS NOT NULL
DROP TABLE #Temp4_OrderWithRootIndicator

SELECT #Temp2_SplitOrderWithKey.* ,
       CASE WHEN Key_ParentOrder IS NULL THEN Key_SplitOrder ELSE Key_ParentOrder END AS Key_ParentOrder,
       CASE WHEN Key_ChildOrder IS NULL THEN 1 ELSE 0 END AS RootIndicator       
INTO #Temp4_OrderWithRootIndicator
FROM #Temp2_SplitOrderWithKey
  LEFT JOIN #Temp3_RefOrderWithKey 
   ON Key_SplitOrder = Key_ChildOrder

/*4. Find root order number for every split order*/
IF OBJECT_ID ('tempdb..#Temp5_CTE ') IS NOT NULL
DROP TABLE #Temp5_CTE 

; WITH CTE AS (
SELECT SplitOrder,OrderDate, SalesAmount, CustomerID, Key_SplitOrder,Key_ParentOrder, Key_SplitOrder AS Key_RootOrder
FROM #Temp4_OrderWithRootIndicator
WHERE RootIndicator = 1

UNION ALL

SELECT #Temp4_OrderWithRootIndicator.SplitOrder,
       #Temp4_OrderWithRootIndicator.OrderDate,
	   #Temp4_OrderWithRootIndicator.SalesAmount,
	   #Temp4_OrderWithRootIndicator.CustomerID,
	   #Temp4_OrderWithRootIndicator.Key_SplitOrder,
	   #Temp4_OrderWithRootIndicator.Key_ParentOrder,
	   CTE.Key_RootOrder
FROM #Temp4_OrderWithRootIndicator 
  INNER JOIN CTE 
   ON #Temp4_OrderWithRootIndicator.Key_ParentOrder = CTE.Key_SplitOrder
WHERE #Temp4_OrderWithRootIndicator.Key_SplitOrder <> #Temp4_OrderWithRootIndicator.Key_ParentOrder
)

SELECT *
INTO #Temp5_CTE 
FROM CTE

/*5. Sales at root order level */
IF OBJECT_ID ('tempdb..#Temp6_RootLevel')IS NOT NULL
DROP TABLE #Temp6_RootLevel

SELECT CustomerID,
       Key_RootOrder, 
       SUM(SalesAmount) AS RootOrderSales,
	   (SELECT C1.OrderDate FROM #Temp5_CTE AS C1
	    WHERE C1.Key_SplitOrder = #Temp5_CTE.Key_RootOrder) AS RootOrderDate  
INTO #Temp6_RootLevel
FROM #Temp5_CTE 
GROUP BY Key_RootOrder,CustomerID

/*6. Find the first root order of the customers*/

SELECT CustomerID, LEFT(Key_RootOrder,6) AS RootOrder, RootOrderSales, RootOrderDate
FROM   
      (SELECT * ,
              ROW_NUMBER() OVER (PARTITION BY CustomerID ORDER BY RootOrderDate ASC) AS OrderRank
       FROM #Temp6_RootLevel) AS R1
WHERE OrderRank = 1


GO

EXEC spFirstRootOrder 
  @SalesPerson='Ann'

